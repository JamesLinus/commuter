generating test cases:
  # construct test cases:
  python spec.py fs -t testgen.c -m model.out

  # or in parallel:
  python par-spec.py fs -t testgen.c -m model.out

  # copy testgen.c to xv6:
  cp testgen.c ~/proj/xv6/libutil/testgen.c

check cache line sharing on xv6:
  cd ../xv6
  make HW=mtrace RUN='fstest -t; halt' mtrace.out
  ../mtrace/mtrace-tools/mscan --check-testcases --kernel o.mtrace/kernel.elf > mscan.out

or in parallel:
  cd ../xv6
  make HW=mtrace
  python ../commuter/par-mtrace-xv6.py
  python ../commuter/par-mscan.py --kernel o.mtrace/kernel.elf > mscan.out

building an mtrace-friendly Linux kernel:
  git clone -b mtrace-v3.8 git://pdos.csail.mit.edu/mosbench/pk.git
  make defconfig
  # Enable DWARF info for mscan
  echo CONFIG_DEBUG_INFO=y >> .config
  # Reduce number of CPUs
  echo CONFIG_NR_CPUS=16 >> .config
  # Avoid live-lock with timer interrupts
  echo CONFIG_HZ_100=y >> .config
  # Shrink the kernel
  echo CONFIG_PARTITION_ADVANCED=n >> .config
  echo CONFIG_SUSPEND=n >> .config
  echo CONFIG_HIBERNATION=n >> .config
  echo CONFIG_CPU_FREQ=n >> .config
  echo CONFIG_YENTA=n >> .config
  echo CONFIG_IPV6=n >> .config
  echo CONFIG_NETFILTER=n >> .config
  echo CONFIG_NET_SCHED=n >> .config
  echo CONFIG_ETHERNET=n >> .config
  echo CONFIG_HAMRADIO=n >> .config
  echo CONFIG_CFG80211=n >> .config
  echo CONFIG_AGP=n >> .config
  echo CONFIG_DRM=n >> .config
  echo CONFIG_FB=n >> .config
  echo CONFIG_SOUND=n >> .config
  echo CONFIG_USB=n >> .config
  echo CONFIG_I2C=n >> .config
  echo CONFIG_HID=n >> .config
  echo CONFIG_SECURITY_SELINUX=n >> .config
  make olddefconfig

  make -j4

check cache line sharing on Linux:
  cd ../xv6
  # Build the Linux initramfs
  make HW=linuxmtrace
  # Run Linux kernel with tracing
  make HW=linuxmtrace KERN=../pk/arch/x86_64/boot/bzImage RUN='fstest -t;halt' mtrace.out
  # Check sharing
  ../mtrace/mtrace-tools/mscan --kernel ../pk/vmlinux --check-testcases > mscan.out

or in parallel:
  cd ../xv6
  make HW=linuxmtrace
  python ../commuter/par-mtrace-linux.py
  python ../commuter/par-mscan.py --kernel ../pk/vmlinux > mscan.out

